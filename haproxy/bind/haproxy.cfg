global
    maxconn 4096
    daemon
    log stdout format raw local0 debug
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

resolvers docker
    nameserver docker1 127.0.0.11:53

defaults
    log     global
    mode    http
    option  httplog
    timeout connect 5000
    timeout client  50000
    timeout server 50000
    default-server init-addr none

frontend http_in
    bind *:8080
    bind *:8443 ssl crt /etc/letsencrypt/haproxy.pem
    mode http
    redirect scheme https code 301 if !{ ssl_fc }

    capture request header Host len 256
    capture request header User-Agent len 256

    acl acme_pth path_beg -i /.well-known/acme-challenge
    acl domain1_hdr hdr(host) -i domain1.example.com
    acl domain2_hdr hdr(host) -i domain2.example.com

    use_backend letsencrypt if acme_pth
    use_backend domain1 if domain1_hdr
    use_backend domain2 if domain2_hdr

backend letsencrypt
    server letsencrypt letsencrypt:8000 resolvers docker check

backend domain1
    server domain1-1 container1:5000 resolvers docker check

backend domain2
    server domain2-1 container2:3000 resolvers docker check
